import sys
sys.path.append('../Character')
import json
import sys
from character import Character
from script import *
from scriptGraph import ScriptGraph
from characterDefinitions import CHARACTER_FOLDER

# Auto-generated file
# Name: Monolingual_Ferris
# Character: female
activity_name = 'Monolingual_Ferris'
class Monolingual_Ferris(ScriptGraph) :
    def __init__(self):
        super().__init__()

    def init_graph(self):


        self.graph.add_node('start', type=['character'])
        self.graph.add_edge('start', 'Node_2', label='start_2')
        self.graph.add_node('Node_2', type=['speak', 'move'], text='Hello friends! I`m Gigi the robot!', motors='wave_hello')
        self.graph.add_edge('Node_2', 'Node_3', label='Node_2_3')
        self.graph.add_node('Node_3', type=['speak'], text='I love building with LEGO and playing with my friends.')
        self.graph.add_edge('Node_3', 'Node_4', label='Node_3_4')
        self.graph.add_node('Node_4', type=['speak', 'face: look_up, move: hands_up'], text='Would you like to play with me?')
        self.graph.add_edge('Node_4', 'Node_5', label='Node_4_5')
        self.graph.add_node('Node_5', type=['speak', 'move'], text='If you want to play, raise your hands!', motors='arms_up', pause={'after': 2})
        self.graph.add_edge('Node_5', 'Node_6', label='Node_5_6')
        self.graph.add_node('Node_6', type=['speak'], text='High… higher… This is great! I`m so happy you want to play with me.')
        self.graph.add_edge('Node_6', 'Node_7', label='Node_6_7')
        self.graph.add_node('Node_7', type=['speak', 'move'], text='Oh, but wait! Lets say hello first!', motors='look_from_side_to_side')
        self.graph.add_edge('Node_7', 'Node_8', label='Node_7_8')
        self.graph.add_node('Node_8', type=['speak', 'show', 'move'], text='Can you see? You have a bin with LEGO blocks and figures on the table.', image='../Assets/Monolingual_Ferris/lego.png', motors='arms_down')
        self.graph.add_edge('Node_8', 'Node_9', label='Node_8_9')
        self.graph.add_node('Node_9', type=['speak'], text='Can you find a LEGO figure that you like? Everyone can choose one LEGO figure and decorate it.')
        self.graph.add_edge('Node_9', 'Node_10', label='Node_9_10')
        self.graph.add_node('Node_10', type=['speak'], text='When you are done, raise the smiley card you have in front of you.')
        self.graph.add_edge('Node_10', 'Node_11', label='Node_10_11')
        self.graph.add_node('Node_11', type=['find'], what='qr', timeout=60, data=['child number 1', 'child number 2', 'child number 3', 'child number 4'])
        self.graph.add_node('Node_12', type=['speak'], text='I see you are having fun. Let me know when you are done by raising the smiley card.')
        self.graph.add_edge('Node_11', 'Node_12', label='no')
        self.graph.add_edge('Node_12', 'Node_11', label='Node_12_11')
        self.graph.add_node('Node_13', type=['speak'], text='Did you pick a boy or a girl? What kind of hair do they have? Curly? Straight? Short? Long? What color is their shirt?')
        self.graph.add_edge('Node_11', 'Node_13', label='yes')
        self.graph.add_edge('Node_13', 'Node_14', label='Node_13_14')
        self.graph.add_node('Node_14', type=['speak', 'move'], text='Show your friends your figure and tell them what you picked.', motors='look_from_side_to_side', pause={'after': 10})
        self.graph.add_edge('Node_14', 'Node_15', label='Node_14_15')
        self.graph.add_node('Node_15', type=['speak'], text='Now, we`re ready to start!')
        self.graph.add_edge('Node_15', 'Node_16', label='Node_15_16')
        self.graph.add_node('Node_16', type=['speak'], text='Today we`re going to build a Ferris wheel. Do you know what a Ferris wheel is?')
        self.graph.add_edge('Node_16', 'Node_17', label='Node_16_17')
        self.graph.add_node('Node_17', type=['speak'], text='Ferris wheels are so much fun! I love going on them and spinning round and round.')
        self.graph.add_edge('Node_11', 'Node_17', label='yes')
        self.graph.add_edge('Node_17', 'Node_18', label='Node_17_18')
        self.graph.add_node('Node_18', type=['speak', 'audio'], text='A Ferris wheel is a big wheel that spins round and round. You can find Ferris wheels in carnivals! I love them!', audio='../Assets/audio/laugh.wav')
        self.graph.add_edge('Node_11', 'Node_18', label='no')
        self.graph.add_edge('Node_18', 'Node_19', label='Node_18_19')
        self.graph.add_node('Node_19', type=['speak'], text='Have you ever been on a Ferris wheel? Tell your friends.', pause={'': 10})
        self.graph.add_edge('Node_19', 'Node_20', label='Node_19_20')
        self.graph.add_node('Node_20', type=['speak'], text='Today we`ll build a big Ferris wheel together for our LEGO friends!')
        self.graph.add_edge('Node_20', 'Node_21', label='Node_20_21')
        self.graph.add_node('Node_21', type=['speak', 'face', 'move'], text='Look at the bin at the center of your table! It has all the pieces we need to build a Ferris wheel. So Lets get started!', face=basic_sequences['look_down'], motors='arms_down')
        self.graph.add_edge('Node_21', 'Node_22', label='Node_21_22')
        self.graph.add_node('Node_22', type=['speak'], text='Are you ready?')
        self.graph.add_edge('Node_22', 'Node_23', label='Node_22_23')
        self.graph.add_node('Node_23', type=['hear'], words='["yes", "[unk]"]')
        self.graph.add_node('Node_24', type=['speak'], text='Can you find the yellow motor block and four green pins?')
        self.graph.add_edge('Node_24', 'Node_25', label='Node_24_25')
        self.graph.add_node('Node_25', type=['speak'], text='When you are done, raise your card.')
        self.graph.add_edge('Node_25', 'Node_26', label='Node_25_26')
        self.graph.add_node('Node_26', type=['find'], what='qr', timeout=60, data=['child number 1', 'child number 2', 'child number 3', 'child number 4'])
        self.graph.add_node('Node_27', type=['speak'], text='Still searching? Take your time.')
        self.graph.add_edge('Node_26', 'Node_27', label='no')
        self.graph.add_edge('Node_27', 'Node_26', label='Node_27_26')
        self.graph.add_node('Node_28', type=['speak'], text='Great! That`s our motor!')
        self.graph.add_edge('Node_26', 'Node_28', label='yes')
        self.graph.add_edge('Node_28', 'Node_29', label='Node_28_29')
        self.graph.add_node('Node_29', type=['speak'], text='Now connect the motor to the gray LEGO plate. the base.')
        self.graph.add_edge('Node_29', 'Node_30', label='Node_29_30')
        self.graph.add_node('Node_30', type=['speak'], text='One person holds the base while the other clicks the motor in.')
        self.graph.add_edge('Node_30', 'Node_31', label='Node_30_31')
        self.graph.add_node('Node_31', type=['speak'], text='Raise your card when you are ready.')
        self.graph.add_edge('Node_31', 'Node_32', label='Node_31_32')
        self.graph.add_node('Node_32', type=['find'], what='qr', timeout=60, data=['child number 1', 'child number 2', 'child number 3', 'child number 4'])
        self.graph.add_node('Node_33', type=['speak'], text='Not quite done? I will wait.')
        self.graph.add_edge('Node_32', 'Node_33', label='no')
        self.graph.add_edge('Node_33', 'Node_32', label='Node_33_32')
        self.graph.add_node('Node_34', type=['speak'], text='Excellent teamwork!')
        self.graph.add_edge('Node_32', 'Node_34', label='yes')
        self.graph.add_edge('Node_34', 'Node_35', label='Node_34_35')
        self.graph.add_node('Node_35', type=['speak'], text='This tower is key! Stack three bricks, one on top of the other, to build your first tower. You can take turns: one stacks, the other one counts. Then switch!')
        self.graph.add_edge('Node_35', 'Node_36', label='Node_35_36')
        self.graph.add_node('Node_36', type=['speak'], text='When it`s done, raise your card.')
        self.graph.add_edge('Node_36', 'Node_37', label='Node_36_37')
        self.graph.add_node('Node_37', type=['speak'], text='Place the tower on the baseplate close to the motor. One friend can hold the baseplate while the other presses the tower down.')
        self.graph.add_edge('Node_37', 'Node_38', label='Node_37_38')
        self.graph.add_node('Node_38', type=['speak'], text='When it`s steady, raise your card.')
        self.graph.add_edge('Node_38', 'Node_39', label='Node_38_39')
        self.graph.add_node('Node_39', type=['find'], what='qr', timeout=60, data=['child number 1', 'child number 2', 'child number 3', 'child number 4'])
        self.graph.add_node('Node_40', type=['speak'], text='Still building? I will wait for your signal.')
        self.graph.add_edge('Node_39', 'Node_40', label='no')
        self.graph.add_edge('Node_40', 'Node_39', label='Node_40_39')
        self.graph.add_node('Node_41', type=['speak'], text='One tower is ready! Great job.')
        self.graph.add_edge('Node_39', 'Node_41', label='yes')
        self.graph.add_edge('Node_41', 'Node_42', label='Node_41_42')
        self.graph.add_node('Node_42', type=['speak'], text='Now we build another tower! We use the same number of bricks.. Try switching roles: the one who counted can now be the builder! When your tower is ready, hold up your cards..')
        self.graph.add_edge('Node_42', 'Node_43', label='Node_42_43')
        self.graph.add_node('Node_43', type=['find'], what='qr', timeout=60, data=['child number 1', 'child number 2', 'child number 3', 'child number 4'])
        self.graph.add_node('Node_44', type=['speak'], text='Take your time. I will wait here until your towers match.')
        self.graph.add_edge('Node_43', 'Node_44', label='no')
        self.graph.add_edge('Node_44', 'Node_43', label='Node_44_43')
        self.graph.add_node('Node_45', type=['speak'], text='Awesome! Both towers are done!')
        self.graph.add_edge('Node_43', 'Node_45', label='yes')
        self.graph.add_edge('Node_45', 'Node_46', label='Node_45_46')
        self.graph.add_node('Node_46', type=['speak'], text='Find the long black axle and slide it through the holes in both towers. One friend can hold the towers while the other pushes the axle through. Lets test it!')
        self.graph.add_edge('Node_46', 'Node_47', label='Node_46_47')
        self.graph.add_node('Node_47', type=['speak'], text='When it turns smoothly, raise your card.')
        self.graph.add_edge('Node_47', 'Node_48', label='Node_47_48')
        self.graph.add_node('Node_48', type=['find'], what='qr', timeout=60, data=['child number 1', 'child number 2', 'child number 3', 'child number 4'])
        self.graph.add_node('Node_49', type=['speak'], text='Let me know when it`s turning well. I will wait!')
        self.graph.add_edge('Node_48', 'Node_49', label='no')
        self.graph.add_edge('Node_49', 'Node_48', label='Node_49_48')
        self.graph.add_node('Node_50', type=['speak'], text='The axle is in and spinning. That was great teamwork!')
        self.graph.add_edge('Node_48', 'Node_50', label='yes')
        self.graph.add_edge('Node_50', 'Node_51', label='Node_50_51')
        self.graph.add_node('Node_51', type=['speak'], text='Connect the green angled pieces to the round wheel center to form an X. Take turns holding the wheel while your partner adds the arms. Then switch.')
        self.graph.add_edge('Node_51', 'Node_52', label='Node_51_52')
        self.graph.add_node('Node_52', type=['speak'], text='When they`re all connected, raise your card.')
        self.graph.add_edge('Node_52', 'Node_53', label='Node_52_53')
        self.graph.add_node('Node_53', type=['find'], what='qr', timeout=60, data=['child number 1', 'child number 2', 'child number 3', 'child number 4'])
        self.graph.add_node('Node_54', type=['speak'], text='Still snapping them in? I will wait until you are done.')
        self.graph.add_edge('Node_53', 'Node_54', label='no')
        self.graph.add_edge('Node_54', 'Node_53', label='Node_54_53')
        self.graph.add_node('Node_55', type=['speak'], text='You made an X! What a super team!')
        self.graph.add_edge('Node_53', 'Node_55', label='yes')
        self.graph.add_edge('Node_55', 'Node_56', label='Node_55_56')
        self.graph.add_node('Node_56', type=['speak'], text='Now gently slide the wheel onto the axle. Be very careful!. One of you can hold the axle, while the other pushes the wheel. Now, Lets test it!')
        self.graph.add_edge('Node_56', 'Node_57', label='Node_56_57')
        self.graph.add_node('Node_57', type=['speak'], text='If it spins nicely, raise your card.')
        self.graph.add_edge('Node_57', 'Node_58', label='Node_57_58')
        self.graph.add_node('Node_58', type=['find'], what='qr', timeout=60, data=['child number 1', 'child number 2', 'child number 3', 'child number 4'])
        self.graph.add_node('Node_59', type=['speak'], text='Try again and raise your card when the wheel is spinning well.')
        self.graph.add_edge('Node_58', 'Node_59', label='no')
        self.graph.add_edge('Node_59', 'Node_58', label='Node_59_58')
        self.graph.add_node('Node_60', type=['speak'], text='Look at that spin! Good job, guys! You did such a great job working together!')
        self.graph.add_edge('Node_58', 'Node_60', label='yes')
        self.graph.add_edge('Node_60', 'Node_61', label='Node_60_61')
        self.graph.add_node('Node_61', type=['speak'], text='Use red or yellow bricks to build four small seats. One of you can build red, and the other can build yellow. then switch!')
        self.graph.add_edge('Node_61', 'Node_62', label='Node_61_62')
        self.graph.add_node('Node_62', type=['speak'], text='When all four are ready, raise your card.')
        self.graph.add_edge('Node_62', 'Node_63', label='Node_62_63')
        self.graph.add_node('Node_63', type=['speak'], text='Now, Lets connect the seats onto the ends of the green arms. Take turns–one at a time. When they`re all on, raise your card.')
        self.graph.add_edge('Node_63', 'Node_64', label='Node_63_64')
        self.graph.add_node('Node_64', type=['find'], what='qr', timeout=60, data=['child number 1', 'child number 2', 'child number 3', 'child number 4'])
        self.graph.add_node('Node_65', type=['speak'], text='Still working? I will wait!')
        self.graph.add_edge('Node_64', 'Node_65', label='no')
        self.graph.add_edge('Node_65', 'Node_64', label='Node_65_64')
        self.graph.add_node('Node_66', type=['speak'], text='That looks amazing. you are almost finished and you are working together so nicely!.')
        self.graph.add_edge('Node_64', 'Node_66', label='yes')
        self.graph.add_edge('Node_66', 'Node_67', label='Node_66_67')
        self.graph.add_node('Node_67', type=['speak'], text='Lets double-check: Are your towers strong? Is the wheel connected? One friend checks while the other spins. When it looks ready, raise your card.')
        self.graph.add_edge('Node_67', 'Node_68', label='Node_67_68')
        self.graph.add_node('Node_68', type=['find'], what='qr', timeout=60, data=['child number 1', 'child number 2', 'child number 3', 'child number 4'])
        self.graph.add_node('Node_69', type=['speak'], text='Still checking? That`s smart. I will wait here.')
        self.graph.add_edge('Node_68', 'Node_69', label='no')
        self.graph.add_edge('Node_69', 'Node_68', label='Node_69_68')
        self.graph.add_node('Node_70', type=['speak'], text='Ready to test! You`ve helped each other every step of the way.')
        self.graph.add_edge('Node_68', 'Node_70', label='yes')
        self.graph.add_edge('Node_70', 'Node_71', label='Node_70_71')
        self.graph.add_node('Node_71', type=['speak'], text='Spin your Ferris Wheel gently with your finger. What happens?')
        self.graph.add_edge('Node_71', 'Node_72', label='Node_71_72')
        self.graph.add_node('Node_72', type=['speak'], text='Raise your card if it spins smoothly!')
        self.graph.add_edge('Node_72', 'Node_73', label='Node_72_73')
        self.graph.add_node('Node_73', type=['find'], what='qr', timeout=60, data=['child number 1', 'child number 2', 'child number 3', 'child number 4'])
        self.graph.add_node('Node_74', type=['speak'], text='Try spinning again. I will wait for your signal.')
        self.graph.add_edge('Node_73', 'Node_74', label='no')
        self.graph.add_edge('Node_74', 'Node_73', label='Node_74_73')
        self.graph.add_node('Node_75', type=['speak', 'move'], text='You did it! Our Ferris Wheel is standing tall and spinning around! You built it together. high five your friend and give a big smile!', motors='Clap your hands!')
        self.graph.add_edge('Node_73', 'Node_75', label='yes')
        self.graph.add_edge('Node_75', 'Node_76', label='Node_75_76')


if __name__ == "__main__":
    sg = Monolingual_Ferris()
    sg.init_graph()

    fuzzy = Character(child=False, gender='female', activity='Monolingual_Ferris', languages=['en'])
    script = Script(graph=sg, character=fuzzy)
    script.generateAllSpeech()
    script.check_assets()

